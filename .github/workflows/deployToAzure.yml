name: .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


env:
  AZURE_FUNCTIONAPP_NAME: function-ghstattracker
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/GitHubStatTracker.Function/'
  AZURE_WEBAPP_NAME: ghst
  AZURE_WEBAPP_PACKAGE_PATH: 'src/GitHubStatTracker.Web/'
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use .NET Core SDK 6.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Setup NuGet.exe for use with actions
      uses: NuGet/setup-nuget@v1.0.5
      with:
        # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
        nuget-version: 'latest'

   # Note: Invoke dotnet restore and point to nuget.config - Lance M.
    - name: NuGet Restore
      env:
        # Note: set the environment varibles defined in nuget.config using the values in secrets - Lance M.
        TELERIK_FEED_USERNAME: ${{ secrets.TelerikUserName  }}
        TELERIK_FEED_PASSWORD: ${{ secrets.TelerikPassword }}
      run: dotnet restore src/GitHubStatTracker.Web/GitHubStatTracker.Web.csproj --configfile=src/nuget.config --runtime linux-x64 && dotnet restore src/GitHubStatTracker.Function/GitHubStatTracker.Function.csproj --configfile=src/nuget.config --runtime linux-x64
        

    - name: 'Build Function'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1.1.8
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

    - name: 'Build WebApp'
      shell: bash
      run: |
        pushd './${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
        dotnet publish --configuration Release --output ./output
        popd

    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_APP_PUBLISH_PROFILE }}
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/output'
        
    
